package dark.login;

import android.app.ActivityManager;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.Color;
import android.graphics.Typeface;
import android.os.Build;
import android.os.Handler;
import android.os.IBinder;
import android.text.Html;
import android.util.Base64;
import android.util.TypedValue;
import android.view.MotionEvent;
import android.view.View;
import android.view.ViewGroup;
import android.view.WindowManager;
import android.widget.Button;
import android.widget.CompoundButton;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.ScrollView;
import android.widget.SeekBar;
import android.widget.Switch;
import android.widget.TextView;
import android.widget.Toast;

public class FloaterDark extends Service {

    private Button close;

    private Button kill;

    private LinearLayout mButtonPanel;

    private RelativeLayout mCollapsed;

    private LinearLayout mExpandet;

    private View mFloatingView;

    private RelativeLayout mRootContainer;

    private WindowManager mWindowManager;

    private WindowManager.LayoutParams params;

    private LinearLayout patches;

    private FrameLayout rootFrame;

    private ImageView startimage;

    private LinearLayout view1;

    private LinearLayout view2;

    public String expire = "DTEXPIRE";

    private String Title() {
        return "DARK - MOD MENU";
    }

    private String Credits() {
        Prefs prefs = Prefs.with(getBaseContext());
        String lol = prefs.read(expire, "");
        return "Expiry time: " + lol.replaceAll(" 00:00:00", "");
    }

    private void addSeekBar(final String name, int paramInt1, final int min, int paramInt3, final SB listner) {
        LinearLayout linearLayout = new LinearLayout(this);
        LinearLayout.LayoutParams layoutParams = new LinearLayout.LayoutParams(-1, -1);
        linearLayout.setPadding(10, 5, 0, 5);
        linearLayout.setOrientation(LinearLayout.VERTICAL);
        linearLayout.setGravity(17);
        linearLayout.setLayoutParams(layoutParams);
        if (paramInt1 % 2 == 0) {
            linearLayout.setBackgroundColor(Color.parseColor("#ffffff"));
        } else {
            linearLayout.setBackgroundColor(Color.parseColor("#cacaca"));
        }
        final TextView textView = new TextView(this);
        String stringBuilder = "<font face='monospace'><b>" +
                name +
                ": <font color='#fe0000'>" +
                min +
                "</b></font>";
        textView.setText(Html.fromHtml(stringBuilder));
        textView.setTextColor(-16777216);
        final SeekBar seek = new SeekBar(this);
        seek.setScaleY(2.0F);
        seek.setPadding(25, 10, 35, 10);
        seek.setLayoutParams(new LinearLayout.LayoutParams(-1, -1));
        seek.setMax(paramInt3);
        seek.setProgress(min);
        seek.setOnSeekBarChangeListener(new SeekBar.OnSeekBarChangeListener() {
            public void onProgressChanged(SeekBar param1SeekBar, int param1Int, boolean param1Boolean) {
                if (param1Int < min) {
                    seek.setProgress(min);
                    listner.OnWrite(min);
                    String stringBuilder1 = "<font face='monospace'><b>" +
                            name +
                            ": <font color='#fe0000'>" +
                            min +
                            "</b></font>";
                    textView.setText(Html.fromHtml(stringBuilder1));
                    return;
                }
                listner.OnWrite(param1Int);
                String stringBuilder = "<font face='monospace'><b>" +
                        name +
                        ": <font color='#fe0000'>" +
                        param1Int +
                        "</b></font>";
                textView.setText(Html.fromHtml(stringBuilder));
            }

            public void onStartTrackingTouch(SeekBar param1SeekBar) {
            }

            public void onStopTrackingTouch(SeekBar param1SeekBar) {
            }
        });
        linearLayout.addView(textView);
        linearLayout.addView(seek);
        this.patches.addView(linearLayout);
    }

    private void addSwitch(String paramString, int paramInt, final SW listner) {
        Switch switc = new Switch(this);
        if (paramInt % 2 == 0) {
            switc.setBackgroundColor(Color.parseColor("#ffffff"));
        } else {
            switc.setBackgroundColor(Color.parseColor("#cacaca"));
        }
        StringBuilder stringBuilder = new StringBuilder();
        stringBuilder.append("<font face='monospace'><b>");
        stringBuilder.append(paramString);
        stringBuilder.append("</b></font>");
        switc.setText(Html.fromHtml(stringBuilder.toString()));
        switc.setTextColor(-16777216);
        switc.setPadding(10, 5, 0, 5);
        switc.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {
            public void onCheckedChanged(CompoundButton param1CompoundButton, boolean param1Boolean) {
                listner.OnWrite(param1Boolean);
            }
        });
        this.patches.addView(switc);
    }


    private float dipToPixels() {
        return TypedValue.applyDimension(1, 6.5F, getResources().getDisplayMetrics());
    }

    private int dp(int paramInt) {
        return (int) TypedValue.applyDimension(1, paramInt, getResources().getDisplayMetrics());
    }

    private int dp2px(int paramInt) {
        float f = (getResources().getDisplayMetrics()).density;
        return (int) (paramInt * f + 0.5F);
    }

    private void initFloating() {
        this.rootFrame = new FrameLayout(getBaseContext());
        this.mRootContainer = new RelativeLayout(getBaseContext());
        this.mCollapsed = new RelativeLayout(getBaseContext());
        this.mExpandet = new LinearLayout(getBaseContext());
        this.view1 = new LinearLayout(getBaseContext());
        this.patches = new LinearLayout(getBaseContext());
        this.view2 = new LinearLayout(getBaseContext());
        this.mButtonPanel = new LinearLayout(getBaseContext());
        RelativeLayout relativeLayout2 = new RelativeLayout(this);
        relativeLayout2.setLayoutParams(new RelativeLayout.LayoutParams(-2, -1));
        relativeLayout2.setPadding(10, 10, 10, 10);
        relativeLayout2.setVerticalGravity(16);
        this.kill = new Button(this);
        this.kill.setBackgroundColor(Color.parseColor("#bcccd4"));
        this.kill.setText("HIDE");
        this.kill.setTextColor(-16777216);
        RelativeLayout.LayoutParams layoutParams3 = new RelativeLayout.LayoutParams(-2, -2);
        layoutParams3.addRule(11);
        this.close = new Button(this);
        this.close.setBackgroundColor(Color.parseColor("#bcccd4"));
        this.close.setText("CLOSE");
        this.close.setTextColor(-16777216);
        this.close.setLayoutParams(layoutParams3);
        relativeLayout2.addView(this.kill);
        relativeLayout2.addView(this.close);
        FrameLayout.LayoutParams layoutParams2 = new FrameLayout.LayoutParams(-1, -1);
        this.rootFrame.setLayoutParams(layoutParams2);
        this.mRootContainer.setLayoutParams(new FrameLayout.LayoutParams(-2, -2));
        this.mCollapsed.setLayoutParams(new RelativeLayout.LayoutParams(-2, -2));
        this.mCollapsed.setVisibility(View.VISIBLE);
        this.startimage = new ImageView(getBaseContext());
        this.startimage.setLayoutParams(new RelativeLayout.LayoutParams(-2, -2));
        int i = (int) TypedValue.applyDimension(1, 60, getResources().getDisplayMetrics());
        (this.startimage.getLayoutParams()).height = i;
        (this.startimage.getLayoutParams()).width = i;
        this.startimage.requestLayout();
        this.startimage.setScaleType(ImageView.ScaleType.FIT_XY);
        byte[] arrayOfByte = Base64.decode("", 0);
        Bitmap bitmap = BitmapFactory.decodeByteArray(arrayOfByte, 0, arrayOfByte.length);
        this.startimage.setImageBitmap(bitmap);
        ((ViewGroup.MarginLayoutParams) this.startimage.getLayoutParams()).topMargin = dp2px(10);
        this.mExpandet.setVisibility(View.GONE);
        this.mExpandet.setBackgroundColor(Color.parseColor("#606060"));
        this.mExpandet.setGravity(17);
        this.mExpandet.setOrientation(LinearLayout.VERTICAL);
        this.mExpandet.setPadding(5, 0, 5, 0);
        LinearLayout.LayoutParams layoutParams1 = new LinearLayout.LayoutParams(-1, -2);
        this.mExpandet.setLayoutParams(layoutParams1);
        ScrollView scrollView = new ScrollView(getBaseContext());
        scrollView.setLayoutParams(new LinearLayout.LayoutParams(-1, dp(190)));
        scrollView.setBackgroundColor(Color.parseColor("#FF000000"));
        this.view1.setLayoutParams(new LinearLayout.LayoutParams(-1, 5));
        this.view1.setBackgroundColor(Color.parseColor("#303030"));
        this.patches.setLayoutParams(new LinearLayout.LayoutParams(-1, -1));
        this.patches.setOrientation(LinearLayout.VERTICAL);
        this.view2.setLayoutParams(new LinearLayout.LayoutParams(-1, 5));
        this.view2.setBackgroundColor(Color.parseColor("#303030"));
        this.view2.setPadding(0, 0, 0, 10);
        this.mButtonPanel.setLayoutParams(new LinearLayout.LayoutParams(-2, -2));
        TextView textView1 = new TextView(getBaseContext());
        textView1.setText(Title());
        textView1.setTextColor(-16777216);
        textView1.setTypeface(Typeface.DEFAULT_BOLD);
        textView1.setTextSize(20.0F);
        textView1.setPadding(10, 25, 10, 5);
        LinearLayout.LayoutParams layoutParams4 = new LinearLayout.LayoutParams(-2, -2);
        layoutParams4.gravity = 17;
        textView1.setLayoutParams(layoutParams4);
        TextView textView2 = new TextView(getBaseContext());
        textView2.setText(Html.fromHtml(Credits()));
        textView2.setTextColor(-16777216);
        textView2.setTypeface(Typeface.DEFAULT_BOLD);
        textView2.setTextSize(10.0F);
        textView2.setPadding(10, 5, 10, 10);
        LinearLayout.LayoutParams layoutParams5 = new LinearLayout.LayoutParams(-2, -2);
        layoutParams5.gravity = 17;
        textView2.setLayoutParams(layoutParams5);
        (new LinearLayout.LayoutParams(-1, dp(25))).topMargin = dp(2);
        this.rootFrame.addView(this.mRootContainer);
        this.mRootContainer.addView(this.mCollapsed);
        this.mRootContainer.addView(this.mExpandet);
        this.mCollapsed.addView(this.startimage);
        this.mExpandet.addView(textView1);
        this.mExpandet.addView(textView2);
        this.mExpandet.addView(this.view1);
        this.mExpandet.addView(scrollView);
        scrollView.addView(this.patches);
        this.mExpandet.addView(this.view2);
        this.mExpandet.addView(relativeLayout2);
        this.mFloatingView = this.rootFrame;
        if (Build.VERSION.SDK_INT >= 26) {
            this.params = new WindowManager.LayoutParams(-2, -2, 2038, 8, -3);
        } else {
            this.params = new WindowManager.LayoutParams(-2, -2, 2002, 8, -3);
        }
        WindowManager.LayoutParams layoutParams = this.params;
        layoutParams.gravity = 51;
        layoutParams.x = 0;
        layoutParams.y = 100;
        this.mWindowManager = (WindowManager) getSystemService(Context.WINDOW_SERVICE);
        this.mWindowManager.addView(this.mFloatingView, this.params);
        RelativeLayout relativeLayout1 = this.mCollapsed;
        LinearLayout linearLayout = this.mExpandet;
        this.mFloatingView.setOnTouchListener(onTouchListener());
        this.startimage.setOnTouchListener(onTouchListener());
        initMenuButton(relativeLayout1, linearLayout);
        modMenu();
    }

    private void initMenuButton(final View collapsedView, final View expandedView) {
        this.startimage.setOnClickListener(new View.OnClickListener() {
            public void onClick(View param1View) {
                collapsedView.setVisibility(View.GONE);
                expandedView.setVisibility(View.VISIBLE);
            }
        });
        this.kill.setOnClickListener(new View.OnClickListener() {
            public void onClick(View param1View) {
                FloaterDark.this.stopSelf();
            }
        });
        this.close.setOnClickListener(new View.OnClickListener() {
            public void onClick(View param1View) {
                collapsedView.setVisibility(View.VISIBLE);
                expandedView.setVisibility(View.GONE);
            }
        });
    }

    private boolean isViewCollapsed() {
        return (this.mFloatingView == null || this.mCollapsed.getVisibility() == View.VISIBLE);
    }

    private native void changeSeekBar(int paramInt1, int paramInt2);

    private native void changeToggle(int paramInt);

    private native String[] getListFT();

    private void modMenu() {

        String[] listFT = getListFT();
        for (int i2 = 0; i2 < listFT.length; i2++) {
            String str = listFT[i2];
            final int l2 = i2;
            if (str.contains("TG_")) {
                addSwitch(str.replace("TG_", ""), i2, new SW() {
                    public void OnWrite(boolean param1Boolean) { changeToggle(l2); }
                });
            } else {
                String[] arrayOfString1;
                if (str.contains("SB_")) {
                    arrayOfString1 = str.split("_");
                    addSeekBar(arrayOfString1[1], i2, Integer.parseInt(arrayOfString1[2]), Integer.parseInt(arrayOfString1[3]), new SB() {
                        @Override
                        public void OnWrite(int param1Int) {
                            changeSeekBar(l2, param1Int);
                        }
                    });
                } else {
                    addSwitch(str, i2, new SW() {
                        public void OnWrite(boolean param1Boolean) { changeToggle(l2); }
                    });
                }
            }
        }


    }

    private View.OnTouchListener onTouchListener() { return new View.OnTouchListener() {
        final View collapsedView = FloaterDark.this.mCollapsed;

        final View expandedView = FloaterDark.this.mExpandet;

        private float initialTouchX;

        private float initialTouchY;

        private int initialX;

        private int initialY;

        public boolean onTouch(View param1View, MotionEvent param1MotionEvent) {
            int j;
            int i;
            switch (param1MotionEvent.getAction()) {
                default:
                    return false;
                case 2:
                    params.x = this.initialX + (int)(param1MotionEvent.getRawX() - this.initialTouchX);
                    params.y = this.initialY + (int)(param1MotionEvent.getRawY() - this.initialTouchY);
                    FloaterDark.this.mWindowManager.updateViewLayout(FloaterDark.this.mFloatingView, FloaterDark.this.params);
                    return true;
                case 1:
                    i = (int)(param1MotionEvent.getRawX() - this.initialTouchX);
                    j = (int)(param1MotionEvent.getRawY() - this.initialTouchY);
                    if (i < 10 && j < 10 && FloaterDark.this.isViewCollapsed()) {
                        this.collapsedView.setVisibility(View.GONE);
                        this.expandedView.setVisibility(View.VISIBLE);
                        Toast.makeText(FloaterDark.this, Html.fromHtml("Made by DARK"), Toast.LENGTH_LONG).show();
                    }
                    return true;
                case 0:
                    break;
            }
            this.initialX = params.x;
            this.initialY = params.y;
            this.initialTouchX = param1MotionEvent.getRawX();
            this.initialTouchY = param1MotionEvent.getRawY();
            return true;
        }
    }; }

    public IBinder onBind(Intent paramIntent) { return null; }

    public void onCreate() {
        super.onCreate();
        initFloating();
    }

    public void onDestroy() {
        super.onDestroy();
        View view = this.mFloatingView;
        if (view != null)
            this.mWindowManager.removeView(view);
    }

    public int onStartCommand(Intent paramIntent, int paramInt1, int paramInt2) {
        this.expire = paramIntent.getStringExtra("EXPIRY");
        return START_NOT_STICKY;
    }

    public void onTaskRemoved(Intent paramIntent) {
        stopSelf();
        try {
            Thread.sleep(100L);
        } catch (InterruptedException interruptedException) {
            interruptedException.printStackTrace();
        }
        super.onTaskRemoved(paramIntent);
    }

    private static interface SB {
        void OnWrite(int param1Int);
    }

    private static interface SW {
        void OnWrite(boolean param1Boolean);
    }
}

